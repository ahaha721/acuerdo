@using viafront3.Models.WalletViewModels
@using viafront3.Views.Wallet
@using viafront3.Views
@using xchwallet;
@model WithdrawalHistoryViewModel
@{
    ViewData["Title"] = "Withdrawal History - " + Model.Asset;
    ViewData.AddActivePage(WalletNavPages.Withdrawals);
}

<h4>@ViewData["Title"]</h4>
<div class="row">
    <div class="col-md-6">
        <h4>Pending</h4>
        <table class="table table-bordered table-responsive table-hover">
            <tr>
                <th>
                    Date
                </th>
                <th>
                    Withdrawal Address
                </th>
                <th class="pad-decimals">
                    Amount
                </th>
            </tr>
            <tbody>@{
                foreach (var item in Model.PendingWithdrawals)
                {
                    <tr>
                        <td>
                            @ViewUtils.FormatUnixTime(@item.Date)
                        </td>
                        <td>
                            @item.To
                        </td>
                        <td>
                            <span class="pad-decimals-data">
                            @ViewUtils.FormatStrDec(Model.Wallet.AmountToString(item.Amount),
                                Model.AssetSettings.Decimals)
                            </span>
                        </td>
                    </tr>
                }
            }</tbody>
        </table>
        <h4>Processed</h4>
        <table class="table table-bordered table-responsive table-hover">
            <tr>
                <th>
                    TX ID
                </th>
                <th>
                    Withdrawal Address
                </th>
                <th class="pad-decimals">
                    Amount
                </th>
            </tr>
            <tbody>@{
                foreach (var item in Model.OutgoingTransactions)
                {
                    <tr>
                        <td>
                            @item.ChainTx.TxId
                        </td>
                        <td>
                            @item.ChainTx.To
                        </td>
                        <td>
                            <span class="pad-decimals-data">
                            @ViewUtils.FormatStrDec(Model.Wallet.AmountToString(item.ChainTx.Amount),
                                Model.AssetSettings.Decimals)
                            </span>
                        </td>
                    </tr>
                }
            }</tbody>
        </table>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    @await Html.PartialAsync("_PadDecimalsScriptsPartial")
}