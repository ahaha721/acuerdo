@using viafront3.Models.WalletViewModels
@using viafront3.Views
@using xchwallet
@model FiatTransactionsViewModel
@{
    ViewData["Title"] = "User Wallet Txs";
}
<h4>@ViewData["Title"] - @Model.Asset</h4>

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Transactions
            </div>
            <div class="panel-body">
                <table class="table table-bordered table-responsive table-hover">
                    <tr>
                        <th>
                            Date
                        </th>
                        <th>
                            Type
                        </th>
                        <th>
                            Deposit Code
                        </th>
                        <th class="pad-decimals">
                            Amount
                        </th>
                        <th>
                            Completed
                        </th>
                    </tr>
                    <tbody>
                        @{
                            foreach (var item in Model.Transactions)
                            {
                                var completed = item.BankTx != null && item.BankTx.Amount == item.Amount;
                                var completedStr = completed ? "yes" : "no";
                                var typeStr = item.Direction == WalletDirection.Incomming ? "deposit" : "withdrawal";
                                var accountStr = item.Direction == WalletDirection.Incomming ? "" : item.AccountNumber;
                                <tr>
                                    <td>
                                        <nobr>@ViewUtils.FormatUnixTime(item.Date)</nobr>
                                    </td>
                                    <td>
                                        @typeStr
                                    </td>
                                    <td>
                                        @item.DepositCode
                                    </td>
                                    <td>
                                        <span class="pad-decimals-data">
                                            @ViewUtils.FormatStrDec(Model.Wallet.AmountToString(item.Amount),
                                                Model.AssetSettings[Model.Asset].Decimals)
                                        </span>
                                    </td>
                                    <td>
                                        @completedStr
                                    </td>
                                    <td>
                                        @accountStr
                                    </td>
                                </tr>
                            }
                    }
                </tbody>
            </table>
            @{
                var count = Model.TxsCount;
                var offset = Model.TxsOffset;
                var limit = Model.TxsLimit;
                if (offset >= limit)
                {
                    <a asp-action="UserInspectFiatWalletTxs" asp-route-id="@ViewData["userid"]" asp-route-asset="@Model.Asset" asp-route-offset="@(offset-limit)" asp-route-limit="@limit">prev</a>
                }
                else if (offset > 0)
                {
                    <a asp-action="UserInspectFiatWalletTxs" asp-route-id="@ViewData["userid"]" asp-route-asset="@Model.Asset" asp-route-offset="0" asp-route-limit="@limit">prev</a>
                }
                if (count - offset > limit)
                {
                    <a asp-action="UserInspectFiatWalletTxs" asp-route-id="@ViewData["userid"]" asp-route-asset="@Model.Asset" asp-route-offset="@(offset+limit)" asp-route-limit="@limit">next</a>
                }
            }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_PadDecimalsScriptsPartial")
}
