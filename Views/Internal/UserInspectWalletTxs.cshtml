@using viafront3.Models.WalletViewModels
@using viafront3.Views
@model UserTransactionsViewModel
@{
    ViewData["Title"] = "User Wallet Txs";
}
<h4>@ViewData["Title"] - @Model.Asset</h4>

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Transactions Incomming
            </div>
            <div class="panel-body">
                <table class="table table-bordered table-responsive table-hover">
            <tr>
                <th>
                    Date
                </th>
                <th>
                    TX ID
                </th>
                <th>
                    From
                </th>
                <th>
                    To
                </th>
                <th class="pad-decimals">
                    Amount
                </th>
                <th>
                    Id
                </th>
            </tr>
            <tbody>@{
                foreach (var item in Model.TransactionsIncomming)
                {
                    <tr>
                        <td>
                            @ViewUtils.FormatUnixTime(item.ChainTx.Date)
                        </td>
                        <td>
                            @item.ChainTx.TxId
                        </td>
                        <td>
                            <span class="truncate">@item.ChainTx.From</span>
                        </td>
                        <td>
                            @item.ChainTx.To
                        </td>
                        <td>
                            <span class="pad-decimals-data">
                            @ViewUtils.FormatStrDec(Model.Wallet.AmountToString(item.ChainTx.Amount),
                                Model.AssetSettings[Model.Asset].Decimals)
                            </span>
                        </td>
                        <td>
                            @item.Meta.Id
                        </td>
                    </tr>
                }
            }</tbody>
            </table>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Transactions Outgoing
            </div>
            <div class="panel-body">
                <table class="table table-bordered table-responsive table-hover">
            <tr>
                <th>
                    Date
                </th>
                <th>
                    TX ID
                </th>
                <th>
                    From
                </th>
                <th>
                    To
                </th>
               <th class="pad-decimals">
                    Amount
                </th>
                <th>
                    Id
                </th>
            </tr>
            <tbody>@{
                foreach (var item in Model.TransactionsOutgoing)
                {
                    <tr>
                        <td>
                            @ViewUtils.FormatUnixTime(item.ChainTx.Date)
                        </td>
                        <td>
                            @item.ChainTx.TxId
                        </td>
                        <td>
                            <span class="truncate">@item.ChainTx.From</span>
                        </td>
                        <td>
                            @item.ChainTx.To
                        </td>
                        <td>
                            <span class="pad-decimals-data">
                            @ViewUtils.FormatStrDec(Model.Wallet.AmountToString(item.ChainTx.Amount),
                                Model.AssetSettings[Model.Asset].Decimals)
                            </span>
                        </td>
                        <td>
                            @item.Meta.Id
                        </td>
                    </tr>
                }
            }</tbody>
            </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_PadDecimalsScriptsPartial")
}
