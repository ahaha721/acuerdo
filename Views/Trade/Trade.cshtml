@using viafront3.Models.TradeViewModels
@using viafront3.Views.Trade
@using viafront3.Views
@model TradeViewModel
@{
    ViewData["Title"] = "Trade";
    ViewData.AddActivePage(Model.Market);
}
<h4>@ViewData["Title"] - @Model.MarketNice</h4>

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Order Book
            </div>
            <div class="panel-body">
                @Html.Partial("_OrderbookPartial", Model.OrderBook)
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading">
                Limit Order
            </div>
            <div class="panel-body">
                <form asp-controller="Trade" asp-action="LimitOrder" method="post" id="limit-order-form">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="Market" value="@Model.Market"/>
                    <input type="hidden" asp-for="Order.Market" value="@Model.Market"/>
                    <div class="form-group">
                        <label for="form-limit-type">Bid/Ask</label>
                        <select class="form-control" id="form-limit-type" asp-for="Order.Side">
                            <option value="buy">Bid</option>
                            <option value="sell">Ask</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="form-limit-amount" class="col-2 col-form-label">Amount (@Model.Settings.AmountUnit, min @Model.Settings.AmountInterval)</label>
                        <div class="col-10">
                            <input class="form-control" id="form-limit-amount" x-unit="@Model.Settings.AmountUnit" asp-for="Order.Amount">
                            <span asp-validation-for="Order.Amount" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="form-limit-price" class="col-2 col-form-label">Price (@Model.Settings.PriceUnit, min @Model.Settings.PriceInterval)</label>
                        <div class="col-10">
                            <input class="form-control" id="form-limit-price" x-unit="@Model.Settings.PriceUnit" asp-for="Order.Price">
                            <span asp-validation-for="Order.Price" class="text-danger"></span>
                        </div>
                    </div>
                    <button type="button" class="btn btn-default form-create-button">Submit</button>
                </form>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading">
                Market Order
            </div>
            <div class="panel-body">
                <form asp-controller="Trade" asp-action="MarketOrder" method="post" id="market-order-form">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="Market" value="@Model.Market"/>
                    <input type="hidden" asp-for="Order.Market" value="@Model.Market"/>
                    <div class="form-group">
                        <label for="form-market-type">Bid/Ask</label>
                        <select class="form-control" id="form-market-type" asp-for="Order.Side">
                            <option value="buy">Bid</option>
                            <option value="sell">Ask</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="form-market-amount" class="col-2 col-form-label">Amount (@Model.Settings.AmountUnit, min @Model.Settings.AmountInterval)</label>
                        <div class="col-10">
                            <input class="form-control" id="form-market-amount" x-unit="@Model.Settings.AmountUnit" asp-for="Order.Amount">
                            <span asp-validation-for="Order.Amount" class="text-danger"></span>
                        </div>
                    </div>
                    <button type="button" class="btn btn-default form-create-button">Submit</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Pending Orders
            </div>
            <div class="panel-body">
                @Html.Partial("_PendingOrdersPartial", Model.OrdersPending,
                    new ViewDataDictionary(this.ViewData) { { "use_pagination", false }, { "trade_model", Model } })
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Completed Bid Orders
            </div>
            <div class="panel-body">
                @Html.Partial("_CompletedOrdersPartial", Model.BidOrdersCompleted,
                    new ViewDataDictionary(this.ViewData) { { "type", "Bid" }, { "use_pagination", false }, { "trade_model", Model } })
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Completed Ask Orders
            </div>
            <div class="panel-body">
                @Html.Partial("_CompletedOrdersPartial", Model.AskOrdersCompleted,
                    new ViewDataDictionary(this.ViewData) { { "type", "Ask" }, { "use_pagination", false }, { "trade_model", Model } })
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Current Balances
            </div>
            <div class="panel-body">
                @Html.Partial("_UserBalancesPartial", Model.Balances,
                    new ViewDataDictionary(this.ViewData) { { "asset_settings", Model.AssetSettings } })
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="confirm-order-submit" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                Confirm Order Creation
            </div>
            <div class="modal-body">
                <p>
                    Are you sure you want to create the following order?
                </p>
                <p id="modal-order-create-p">
                </p>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                <a href="#" id="confirm-creation" class="btn btn-success success">Yes</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    @await Html.PartialAsync("_PadDecimalsScriptsPartial")
    @await Html.PartialAsync("_OrderCreationScriptPartial")
    @await Html.PartialAsync("_OrderCancellationScriptPartial")
}