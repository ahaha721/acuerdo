---
- name: viafront
  hosts: all
  become: yes
  become_user: root

  vars:
    dotnet_run_env: "{{ 'export ASPNETCORE_ENVIRONMENT=Development;' if DEPLOY_TYPE == 'test' else '' }}"
    dotnet_configuration: "{{ 'Debug' if DEPLOY_TYPE == 'test' else 'Release' }}"
    kyc_enabled: "{{ 'true' if kyc_url else 'false' }}"
    fiat_payment_enabled: "{{ 'true' if fiat_server_url else 'false' }}"
    fiat_payout_enabled: "{{ 'true' if fiat_server_url else 'false' }}"
  tasks:
    - name: ansible group
      group: 
        name: viafront
        state: present

    - name: ansible user
      user:
        name: viafront
        shell: /usr/sbin/nologin
        groups: viafront
        system: yes
        state: present

    - name: git clone/checkout acuerdo
      git:
        repo: '{{git_repo}}'
        dest: /opt/viafront
        version: '{{git_hash}}'
        accept_hostkey: yes
        key_file: '/root/.ssh/id_rsa'
        force: yes

    - name: set viafront files owner
      file:
        dest: /opt/viafront
        owner: viafront
        group: viafront
        mode: 0755
        recurse: yes

    - name: set mysql host for asp.net db
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("DefaultConnection": "Server)=10\.50\.1\.100;(Database=viafront;Uid)=viaxch;(Pwd)=not_production;(Allow)'
        replace: '\1={{backend_host}};\2={{mysql_user}};\3={{mysql_pass}};\4'

    - name: set mysql host for viaxch db
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("Host": )"10\.50\.1\.100"'
        replace: '\1"{{backend_host}}"'

    - name: set mysql username for viaxch db
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("User": )"viaxch"'
        replace: '\1"{{mysql_user}}"'

    - name: set mysql password for viaxch db
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("Password": )"not_production"'
        replace: '\1"{{mysql_pass}}"'

    - name: set mysql host for wallets db
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("Host": )"10\.50\.1\.100"'
        replace: '\1"{{backend_host}}"'

    - name: set mysql username for wallets db
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("User": )"viaxch"'
        replace: '\1"{{mysql_user}}"'

    - name: set mysql password for wallets db
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("Password": )"not_production"'
        replace: '\1"{{mysql_pass}}"'

    - name: set accesshttp url 
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("AccessHttpUrl": )"http:\/\/10\.50\.1\.100:8080"'
        replace: '\1"http://{{backend_host}}:8080"'

    - name: set accessws url
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("AccessWsUrl": )"ws:\/\/10\.50\.1\.100:8090"'
        replace: '\1"ws://{{backend_host}}:8090"'

    - name: set accessws ip
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("AccessWsIp": )"10\.50\.1\.100"'
        replace: '\1"{{backend_ip}}"'

    - name: set websocket url
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("WebsocketUrl": )"ws:\/\/10\.50\.1\.100\/ws"'
        replace: '\1"wss://{{deploy_host}}/ws/"'

    - name: set kafka host
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("KafkaHost": )"10\.50\.1\.100:9092"'
        replace: '\1"{{backend_host}}:9092"'

    - name: set waves node url
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("NodeUrl": )"http:\/\/10\.50\.1\.100:6869"'
        # port 5100 to use wavescache
        replace: '\1"http://{{blockchain_host}}:5100"'

    - name: set zap node url
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("NodeUrl": )"http:\/\/10\.50\.1\.100:6869"'
        # port 5100 to use wavescache
        replace: '\1"http://{{blockchain_host}}:5100"'

    - name: set nbxexplorer url
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("NodeUrl": )"http:\/\/10\.50\.1\.100:24444"'
        replace: '\1"http://{{blockchain_host}}:24444"'

    - name: set from email
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("From": ")admin@viafront3.com(")'
        replace: '\1{{admin_email}}\2'

    - name: set smtp host
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("SmtpHost": )"10\.50\.1\.100"'
        replace: '\1"localhost"'

    - name: set kyc enabled
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("KycServerEnabled": )false'
        replace: '\1{{kyc_enabled}}'

    - name: set kyc url
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("KycServerUrl": )"http://localhost"'
        replace: '\1"{{kyc_url}}"'

    - name: set kyc api key
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("KycServerApiKey": )"key"'
        replace: '\1"{{kyc_api_key}}"'

    - name: set kyc api secret
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("KycServerApiSecret": )"not_production"'
        replace: '\1"{{kyc_api_secret}}"'

    - name: set fiat server url
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("FiatServerUrl": )"http://localhost"'
        replace: '\1"{{fiat_server_url}}"'

    - name: set fiat server api key
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("FiatServerApiKey": )"key"'
        replace: '\1"{{fiat_server_api_key}}"'

    - name: set fiat server api secret
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("FiatServerSecret": )"not_production"'
        replace: '\1"{{fiat_server_api_secret}}"'

    - name: set fiat payment enabled
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("PaymentsEnabled": )false'
        replace: '\1{{fiat_payment_enabled}}'

    - name: set fiat payout enabled
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("PayoutsEnabled": )false'
        replace: '\1{{fiat_payout_enabled}}'

    - name: set alert email
      replace:
        path: /opt/viafront/appsettings.json
        regexp: '("AlertEmail": ")admin@viafront3.com(")'
        replace: '\1{{admin_email}}\2'

    - name: copy viafront.service
      template:
        src: templates/viafront.service
        dest: /etc/systemd/system/viafront.service

    - name: stop viafront service
      service: 
        name: viafront
        state: stopped
        enabled: no

    - name: copy viafront_order_emails.service
      template:
        src: templates/viafront_order_emails.service
        dest: /etc/systemd/system/viafront_order_emails.service

    - name: stop viafront_order_emails service
      service: 
        name: viafront_order_emails
        state: stopped
        enabled: no

    - name: install npm & node
      apt:
        name: ['nodejs-legacy', 'npm']
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('16.04', '<=')

    - name: install npm & node
      apt:
        name: ['nodejs', 'npm']
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('16.04', '>')

    - name: install bower
      shell: cd /opt/viafront; npm install bower
      become: yes
      become_user: viafront

    - name: dotnet restore packages 
      shell: cd /opt/viafront; dotnet restore;
      become: yes
      become_user: viafront

    - name: dotnet build
      shell: cd /opt/viafront; dotnet build -c {{dotnet_configuration}};
      become: yes
      become_user: viafront

    - name: EF migrations
      shell: cd /opt/viafront; dotnet ef database update
      become: yes
      become_user: viafront

    - name: add roles
      shell: cd /opt/viafront; dotnet run console initroles
      become: yes
      become_user: viafront

    - name: init wallet dbs
      shell: python /opt/viafront/init_wallet_dbs.py /opt/viafront/appsettings.json /opt/viafront/xchwallet/xchwallet/ /opt/viafront
      become: yes
      become_user: viafront

    - name: start viafront service
      service: 
        name: viafront
        state: started
        enabled: yes

    - name: start viafront_order_emails service
      service: 
        name: viafront_order_emails
        state: started
        enabled: yes

    - name: add cron job to double check dev api is not running
      cron:
        name: check dev api
        special_time: hourly
        job: >
          status=`curl localhost:5000/api/dev/Check -i  2>/dev/null | head -n 1 | cut -d$' ' -f2` && if [ "$status" != "404" ]; then echo "posting to localhost:5000/api/dev/UserCreate does not give 404!"; fi 

    # build and copy xchwallet test app for telegraf
    - name: dotnet build xchwallet text
      shell: cd /opt/viafront/xchwallet/test; dotnet build -c Release;
      become: yes
      become_user: viafront
    - file: path=/opt/telegraf/xchwallet_test state=directory
    - name: copy xchwallet test
      shell: cp /opt/viafront/xchwallet/test/bin/Release/netcoreapp2.1/* /opt/telegraf/xchwallet_test; chmod 0755 /opt/telegraf/xchwallet_test -R;
